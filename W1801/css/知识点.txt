css概述
css引用方式（4种）
引入方式的优先级
常用link方式引入的优势


选择器
选择器权重(浏览器执行样式时有关)
重点记忆基础选择器：嵌套关系和同级关系
伪类：after,before
结构：nth-child(n)



字体
四个分支属性和属性值
color的四种类型值



文本设置
关于文本的各种样式设置属性
文本超出裁切显示省略号需设置那些属性



盒子模型的概述：
组成：内容+内间距+边框+外间距
分类：IE盒子、标准盒子
区别：
IE：实际宽高 = 设置的宽高（内容+内间距+边框）
标准：实际宽高 = 设置的宽高+内间距+边框


盒子模型外间距重叠的情况：
1.垂直方向上的两个块级元素，第一个元素的下外间距和第二元素的上外
间距产生重叠
2.父级没有设置padding+border，父级元素的首个子元素设置上外间距会和
父级元素的上外间距产生重叠。

圆角盒子：
四角同时设置：上限值为50%
四角分开设置：上限值为(100%/150%)

元素阴影：与文本阴影的区别


隐藏元素的方式(4种)：
display:none;opacity:0;hidden="hidden";visibility:hidden;



浮动定位：
浮动元素产生的影响：
导致浮动元素父级高度为0


清除浮动影响的方法：
1.浮动元素后插入块级空标签,给标签设置div{clear：both；
height：0；visibility：hidden};会产生很多无意义的空标签。
2.高度为0的元素上(浮动元素的父级)设置overflow：hidden;在有二级菜单时不可用。
3.高度为0的元素上(浮动元素的父级)设置position:absolate。多个绝对定位元素会产生重叠。
4.伪类选择器==:after/:before
(1).只用:after
.clearfix:after{
content:'.';
//隐藏内容
height：0;
visibility:hidden;
//改变类型
display:bolck;
//清除浮动
clear:both;
}

(2)after和before搭配使用
.clearfix:before,.clearfix:after{
content:'';
display:table;
}
.clearfix:after{
clear:both;
}



position定位：
relative:相对于元素本身的原始位置
absolute：向父级一层一层的找定位元素进行相对定位，
如果找到body都没有定位的元素，相对body定位。
fixed：相对于浏览器(body)上下左右进行定位


背景：
background-color,background-image,background-repeat
background-position(背景图定位,图片精灵|css Sprites|雪碧图)
background-size(contain,cover区别)
渐变
渐变的分类：线性渐变，径向渐变
重复性线性渐变：颜色的百分比设置,颜色的重复次数


过渡特效：
过渡特效生效机制：必须要事件触发，对display属性不生效
四个分支属性：每个属性的属性值


变形转换：
transform:translate rotate scale skew
值的写法，和值的设置
矩阵：matrix(1,0,0,1,0,0)
矩阵-位移：5,6位参数
矩阵-旋转：1~4位参数；matrix(cosθ,sinθ,-sinθ,cosθ,0,0)
矩阵-缩放：1,4位产数
矩阵-倾斜：2,3位参数；matrix(1,tanθy,tanθx,1,0,0)

变换原点，3D嵌套样式(父元素设置子元素生效)
3D透视：透视点(父级设置)，背面翻转可见性
透视距离:
属性：-webkit-perspective:200;(父级设置)
属性值：transform:perspective(200)(当前设置)


动画：
动画声明：@keyframes animationName{//定义动画帧}
动画帧定义:英文单词（from,to）;百分数（0%~100%）
调用动画：中括号代表可省略的值
animation:动画名称 动画时间 [时间曲线] [延迟] [播放次数]
[逆向播放] [播放或暂停] [动画形态];
属性写法，对应属性值。


拓展：
CSS中具有继承性的属性(至少记10个)

CSS hack：
概念：通过在CSS样式中加入一些特殊的符号，让不同的浏览器识别不同的符号，以达到应用不同的CSS样式的目的
分类：条件hack，属性hack，选择器hack

H5新元素兼容
方法：
1.显示设置元素类型
2.通过js给IE浏览器添加新元素
3.通过条件注释引入html5shiv.js(bootsCDN开源网站)

条件注释写法：
<!--[if lt IE 9]>
//引入文件
<![endif]-->

媒体查询：
1.语法（声明-条件设置-样式设置）
（1）@media mediatype and|not|only (media feature){
//样式设置

}
（2）限制css文件
<link rel="stylesheet" media="mediatype and|not|only (media feature)" href="index.css">

2.媒体查询的三个条件设置
（1）媒体类型
print(打印机)、screen(电脑屏幕,平板,智能手机)、speech(屏幕阅读器)
（2）媒体排除
not、only、and、all(所有设备)
（3）媒体功能
设备中页面可见区域宽高(height/width)
设备中页面最大/最小可见宽高(max/min-width/max/min-height)
设备的屏幕的可见宽高(device-width/device-height)


3.移动设备优化设置
<meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
备注：快捷键：meta:vp;建议在pc网页（百度站长工具对页面转码添加广告）或者手机网页都加上
width/height:数值/device-width/device-height
initial-sacle:初始缩放比例，默认为1
mininum-scale:最小缩放比例，默认为1
maxinum-scale:最大缩放比例，默认为1
user-scalable:是否允许用户收到缩放(yes/no)

4.兼容性(IE6~IE8)
!--[if lt IE9]> <script src="http://cdn.bootcss.com/livingston-css3-mediaqueries-js/1.0.0/css3-mediaqueries.min.js"> </script> <![endif]-->

5.分辨率
PC:@media (min-width:1200px){...}
iPad:@media (min-width:768px) and (max-width:980px){...}
大屏手机：@media (max-width:768px){...}
小屏手机：@media (max-width:480px){...}


其他
1024px:@media screen and (max-width:1024px){}
640px:@media screen and (max-width:640px){}
iPad横屏:@media screen and (max-device-width:1024px)
and (orientation:landscape){}
iPad竖屏:@media screen and (max-device-width:768px)
and (orientation:portrait){}



单词间距：word-spacing
字符间距:letter-spacing
空格换行处理：white-space


文本阴影：text-shadow
元素阴影:box-shadow

圆角边框：border-radius

输入框默认值(当前值)：value

输入框提示信息：placeholder

鼠标悬浮的文本提示：title


相对定位：position:relative;
绝对定位:position:absolute;

opacity     text-indent

选择器含义：
E>F：子选择器        E+F：相邻选择器     E~F：同级选择器

E F：后代选择器       E:hover：当鼠标悬浮E时

E:focus：当E获取焦点时

E:first-child:选择第一个为E的子元素
E:nth-child(n):选择第N个子元素E

E:before/E::before:在E元素的内容之前插入内容
E:after/E::before:在E元素的内容之后插入内容

<p>段落标签</p>
p:before:
p:after:

E:empty:选择文档中所有内容为空的E元素
:empty:选择文档中所有内容为空的元素
E:checked:选择处于被选中状态下的E元素


内核前缀：
-webkit-：兼容Chrome,Safari等使用webkit引擎的浏览器
-moz-:兼容firefox等使用Mozilla引擎的浏览器
-ms-：兼容IE系列浏览器
-o-:兼容Opera早期浏览器

作用：兼容早期不支持CSS3新增属性的浏览器。




width:inherit;
display(不具有继承性，显示设置inherit也无效)


float：left/right
display:none;
hidden="hidden"
position:absolute;
position:fixed;


文本溢出裁切以省略号显示；
#test{
white-space:nowrap;
overflow:hidden;
text-overflow:ellipsis;
}


#test{
width：120px;height:120px;
position:absolute;
left:50%;top:50%;
margin-left:-60px;
margin-top:-60px;
}
#test{
width：120px;height:120px;
position:absolute;
//存在兼容性
left:calc(50% -60px);top:calc(50% - 60px);
}


左右固定，中间自适应的三列布局：

<body>
<div class="left"></div>
<div class="middle"></div>
<div class="right"></div>
</body>

方法一：
.left{
width:200px;
float:left;
background-color:#769300;
}
.right{
width:200px;
float:right;
background-color:#0f0;
}
.middle{
写法一：
float:left;
width:calc(100% - 400px);
margin:0 auto;
写法二：
position:absolute;
left:200px;
right:200px;
height:300px;
}


方法二：
.left{
position:absolute;
left:0;
top:0;
}
.right{
position:absolute;
right:0;
top:0;
}
.middle{
position:absolute;
left:200px;
right:200px;
top:0;
}

方法三：
body{
display:-webkit-flex;
flex-flow:row nowrap;
justify-content:space-between;
}
.left,.right{
width:200px;
height:100%;
min-width:200px;
}
.middle{
margin:0;
}






