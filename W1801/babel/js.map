{"version":3,"sources":["js/origin/common.js","js/origin/common_es6.js"],"names":[],"mappings":";;AAAA;;;;;;AAMA;AACA;AACE;AACA,MAAI,QAAO,IAAX;AACA;AACA,MAAI,MAAM,EAAV;AACD;AACD,QAAQ,GAAR,CAAY,UAAU,IAAV,GAAiB,MAAjB,GAA0B,GAAtC;;AAEA;AACA;AACA,IAAI,OAAO;AACT,QAAM;AADG,CAAX;AAGA,IAAI,IAAJ,EAAU;AACR,MAAI,MAAM;AACR,UAAM;AADE,GAAV;AAID;AACD,QAAQ,GAAR,CAAY,UAAU,IAAI,IAA1B;AACA,QAAQ,GAAR,CAAY,WAAW,KAAK,IAA5B;;AAEA;;AAEA,KAAK,IAAM,GAAX,IAAkB,IAAlB,EAAwB;AACtB,UAAQ,GAAR,CAAY,QAAQ,KAAK,GAAL,CAApB;AACA;AACA;AACA;AACA,UAAQ,GAAR,CAAY,SAAS,KAAK,GAAL,CAArB;AACD;;AAGD;AACA;AACA,SAAS,GAAT,GAAuB;AAAA,oCAAP,KAAO;AAAP,SAAO;AAAA;;AACrB;AACA;AACA;AACA,UAAQ,GAAR,CAAY,KAAZ;AACD;AACD;;AAGA;AACA,IAAI,MAAM,SAAN,GAAM,GAAW;AAAE,SAAO,OAAP;AAAgB,CAAvC,C,CAAwC;AACxC,WAAW,YAAW;AAAE,SAAO,OAAP;AAAgB,CAAxC,E,CAA2C;AAC3C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,MAAV,CAAiB,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAAE,SAAO,QAAQ,KAAf;AAAsB,CAAhE,E,CAAmE;;AAEnE;AACA,IAAI,OAAO,SAAP,IAAO;AAAA,SAAK,CAAL;AAAA,CAAX;AACA;AACA;;AAEA;AACA,IAAI,OAAO,SAAP,IAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAA,SAAa,IAAI,CAAJ,GAAQ,CAArB;AAAA,CAAX;AACA;AACA;;AAEA;AACA,IAAI,KAAK,SAAL,EAAK,CAAS,CAAT,EAAY,CAAZ,EAAe;AACpB,MAAI,IAAI,IAAI,CAAZ;AACA,MAAI,IAAI,IAAI,CAAZ;AACA,SAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD,CAJH;AAKE;AACF,IAAI,KAAK,SAAL,EAAK,CAAC,CAAD,EAAI,CAAJ,EAAU;AACjB,SAAO,CAAC,KAAK,IAAI,CAAT,CAAD,EAAc,IAAI,CAAlB,CAAP;AACD,CAFD;;AAIA;AACA,IAAI,KAAK,SAAL,EAAK,CAAS,CAAT,EAAY,CAAZ,EAAe;AACpB,IAAE,KAAF,EAAS,GAAT,CAAa,OAAb,EAAsB,MAAtB;AACD,CAFH;AAGE;AACF,IAAI,KAAK,SAAL,EAAK,CAAC,CAAD,EAAI,CAAJ,EAAU;AACjB,IAAE,KAAF,EAAS,GAAT,CAAa,OAAb,EAAsB,MAAtB;AACD,CAFD;;;AClFA;;;;;;;;AAQA,IAAI,QAAQ,SAAZ;AACA,IAAM,aAAa,CAAC,WAAD,EAAc,MAAd,EAAsB,sCAAtB,CAAnB;;AAEA,IAAI,WAAW,SAAX,QAAW,CAAC,OAAD,EAAU,KAAV,EAAoB;AACjC,GAAE,OAAF,EAAW,GAAX,CAAe,iBAAf,EAAkC,KAAlC;AACD,CAFD;;AAIA,MAAM,IAAN,sBACe,WAAW,CAAX,CADf,0CAGQ,WAAW,CAAX,CAHR,83GAaW,WAAW,CAAX,CAbX;;AAgBA,SAAS,eAAT,EAA0B,SAA1B","file":"js","sourcesContent":["/*\r\n * @Author: tom.anny \r\n * @Date: 2018-06-13 09:48:44 \r\n * @Last Modified by: tom.anny\r\n * @Last Modified time: 2018-06-13 14:13:33\r\n */\r\n// let命令和var命令\r\n{\r\n  // 块级作用域\r\n  let name = \"廖旭\";\r\n  // 全局变量\r\n  var age = 30;\r\n}\r\nconsole.log(\"name:\" + name + \"age:\" + age);\r\n\r\n// 块级作用域：被大括符所包含的，使用let命令声明的变量\r\n// 局部作用域(函数作用域):变量是在函数体内部使用var命令声明\r\nlet obj1 = {\r\n  name: \"夏翠\"\r\n}\r\nif (true) {\r\n  var obj = {\r\n    name: \"周楷翔\"\r\n  }\r\n\r\n}\r\nconsole.log(\"name:\" + obj.name);\r\nconsole.log(\"name1:\" + obj1.name);\r\n\r\n// 常量：用const命令声明赋值后，后续不能修改它的值\r\n\r\nfor (const key in obj1) {\r\n  console.log(\"输出：\" + obj1[key]);\r\n  //   if (key == \"name\") {\r\n  //     key = \"age\";\r\n  //   }\r\n  console.log(\"修改后：\" + obj1[key]);\r\n}\r\n\r\n\r\n// rest参数:参数位数不定，并且可以为空，将参数列表转化为数组形式\r\n// 注意：在rest参数后不能再跟参数\r\nfunction fun(...param) {\r\n  //   for (const key in param) {\r\n  //     console.log(param[key]);\r\n  //   }\r\n  console.log(param);\r\n}\r\nfun();\r\n\r\n\r\n// 箭头函数：参数 => 函数体,简化回调函数或函数表达是形式的函数写法\r\nvar fun = function() { return \"hello\" } //=== var fun = () =>  \"hello\"\r\nsetTimeout(function() { return \"hello\" }); //=== setTimeout(() => \"hello\")\r\n[1, 2, 3].reduce(function(item1, item2) { return item1 + item2 }); //=== [1, 2, 3].reduce((item1,item2) => item1+item2)\r\n\r\n// 有参：1个参\r\nvar func = a => a;\r\n// 等于\r\n// var func = function(a){return a}\r\n\r\n// 有参：多个参\r\nvar func = (a, b, c) => a + b + c;\r\n// 等于\r\n// var func = function(a,b,c){return a+b+c}\r\n\r\n// 函数体多于一条语句,必须有返回值\r\nvar fc = function(a, b) {\r\n    var c = a + b;\r\n    var d = a * c;\r\n    return [c, d]\r\n  }\r\n  // 等于\r\nvar fc = (a, b) => {\r\n  return [a * (a + b), a + b]\r\n}\r\n\r\n// 函数体多于一条语句,没有返回值\r\nvar fc = function(a, b) {\r\n    $(\"div\").css('color', \"#f00\");\r\n  }\r\n  // 等于\r\nvar fc = (a, b) => {\r\n  $(\"div\").css('color', \"#f00\");\r\n}","/* \r\n * 功能：公共功能JS文件(未编译的ES6文件)\r\n * @Author: tom.anny \r\n * @Date: 2018-06-13 15:24:17 \r\n * @Last Modified by: tom.anny\r\n * @Last Modified time: 2018-06-13 16:30:56\r\n */\r\n\r\nlet $body = $(`body`);\r\nconst contentArr = ['Babel简要介绍', '基本概念', '该页面由柯宇的老师制作，若涉及到法律相关问题，请直接找柯宇的麻烦，谢谢！'];\r\n\r\nlet setTheme = (element, color) => {\r\n  $(element).css('backgroundColor', color);\r\n};\r\n\r\n$body.html(`\r\n\t<header><h1>${contentArr[0]}</h1></header>\r\n\t<main>\r\n\t\t<h2>${contentArr[1]}</h2>\r\n\t\t<div>\r\n\t\t\t<p>Babel的主要用途是能把你写的JavaScript文件变成其他版本的JavaScript。本例Babel使用的版本为目前的最新版本“6.24.1”。</p>\r\n\t\t\t<p>比如，由于ES6（ECMAScript标准的第六版，简称“ES2015”或“ES6”）更加合理的语法特性，以及更多新增的属性和方法，现在已慢慢成为主流，被Web前端开发者所“追逐”。但是ES6在国内却面临一个非常致命的问题，就是除了Google Chrome（包括version 55.0和之后版本，其它浏览器以这个版本发布的时间作为参考）以外的浏览器，没有一个浏览器能完全支持ES6的语法的。</p>\r\n\t\t\t<p>而Babel的出现，很大程度解决了上述问题，它能将开发者用ES6写的JS文件尽可能完美地转换为ES5（ECMA组织2010年发布的脚本语言标准）的语法，也就是说，开发者可以在项目中任性地使用ES6的语法了。当然，把JS文件从ES6转到ES5并不是它的唯一用途。</p>\r\n\t\t\t<p>需要说明的是bable也是一个基于node的项目，也就是说要确保你的电脑里已经安装好了最新版本的nodeJS，npm（或cnpm）能正常的使用，并且项目内已经用<code>npm init</code>命令创建好了<file>package.json</file>文件。</p>\r\n\t\t\t<p>Babel的使用非常简单，只要你有过npm使用的相关经验，那网上任何一篇Babel的入门教程（前提是笔者不是来报复社会的）都可以让你学会Babel的使用。</p>\r\n\t\t\t<p>但是如果你想真正学好babel，尤其是学会babel和其它现有流行的构建工具（如webpack）一起使用虽说谈不上多难，也绝对不会太简单。但当你熟练掌握了这些构建工具的使用，那你的项目产出将会是非常优秀的，这也是你成为一个合格前端开发工程师的重要证明。</p>\r\n\t\t</div>\r\n\t</main>\r\n\t<footer>${contentArr[2]}</footer>\r\n`);\r\n\r\nsetTheme('header,footer', '#237dfd');"]}